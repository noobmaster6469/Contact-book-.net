@model List<ContactApp.Models.Contact>

@{
    ViewData["Title"] = "Contacts";

    // Group contacts by first letter of Name (case-insensitive)
    var groupedContacts = Model
        .OrderBy(c => c.Name)
        .GroupBy(c => c.Name.Substring(0, 1).ToUpper());
}

<h2>Contact List</h2>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search contacts..." />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<a asp-action="Create" class="btn btn-success mb-4">Add New Contact</a>

@if (!Model.Any())
{
    <div class="alert alert-warning">No contacts found.</div>
}
else
{
    foreach (var group in groupedContacts)
    {
        <h3>@group.Key</h3> <!-- Letter heading -->

        <ul class="list-group mb-4">
            @foreach (var contact in group)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong>@contact.Name</strong><br />
                        <small>@contact.Email | @contact.Phone</small>
                    </div>
                    <div>
                        <div class="btn-group gap-1" role="group">
                            <a asp-action="Edit" asp-route-id="@contact.Id" class="btn btn-primary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@contact.Id" class="btn btn-danger btn-sm">Delete</a>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
}
